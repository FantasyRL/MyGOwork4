// Code generated by hertz generator.

package video

import (
	"context"

	video "bibi/biz/model/video"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// PutVideo .
// @Summary PutVideo
// @Description put video
// @Accept json/form
// @Produce json
// @Body video_file form-data []byte true "视频文件"
// @Param title query string true "标题"
// @Body cover form-data []byte true "视频封面"
// @Param token query string true "token"
// @router /bibi/video/upload [POST]
func PutVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.PutVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.PutVideoResp)

	c.JSON(consts.StatusOK, resp)
}

// ListVideo .
// @router /bibi/video/myvideo [POST]
func ListVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.ListUserVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.ListUserVideoResp)

	c.JSON(consts.StatusOK, resp)
}

// SearchVideo .
// @router /bibi/video/search [POST]
func SearchVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.SearchVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.SearchVideoResp)

	c.JSON(consts.StatusOK, resp)
}

// HotVideo .
// @router /bibi/video/hot [GET]
func HotVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req video.HotVideoReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(video.HotVideoReq)

	c.JSON(consts.StatusOK, resp)
}
