// Code generated by hertz generator.

package interaction

import (
	"bibi/biz/interaction/service"
	"bibi/biz/model/interaction"
	"bibi/pkg/errno"
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// LikeAction .
// @Summary like_action
// @Description like or dislike video
// @Accept json/form
// @Produce json
// @Param video_id query int true "视频id"
// @Param action_type query int true "点赞:0;取消点赞:1"
// @Param Authorization header string true "token"
// @router /bibi/interaction/like/action [POST]
func LikeAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.LikeActionReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.LikeActionResp)

	v, _ := c.Get("current_user_id")
	id := v.(int64)

	switch req.ActionType {
	case 1:
		err = service.NewLikeService(ctx).Like(&req, id)
	case 0:
		err = service.NewLikeService(ctx).DisLike(&req, id)
	}
	resp.Base = errno.BuildInteractionBaseResp(err)
	c.JSON(consts.StatusOK, resp)
}

// LikeList .
// @router /bibi/interaction/like/list [GET]
func LikeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req interaction.LikeListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(interaction.LikeListResp)

	c.JSON(consts.StatusOK, resp)
}
